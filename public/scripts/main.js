(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var app = {};

app.columns = {
  a: [],
  b: [],
  c: [],
  d: [],
  e: [],
  f: [],
  g: [],
  h: [],
  i: [],
  j: []
};
app.nextTurn = ['red'];

// CLICK ON COLUMN TO ADD PIECE
app.addPiece = function () {
  $('.column').on('click', function () {
    var index = $(this).data("column");
    var selectedColumn = app.columns['' + index];
    if (selectedColumn.length === 6) {
      alert('Invalid move!');
    } else if (selectedColumn.length < 6) {
      var color = app.nextTurn[app.nextTurn.length - 1];
      var cellNum = selectedColumn.length + 1;
      $('.column-' + index + ' .cell-' + cellNum).addClass('' + color);
      selectedColumn.push('' + color);
      app.changeTurn();

      var i = Object.values(app.columns);
      var x = $(this).data("array");
      var y = cellNum - 1;

      // VERTICAL WIN CONDITION
      // WORKS AS INTENDED
      if (i[x].length > 1 && i[x][y] === i[x][y - 1] && i[x][y - 1] === i[x][y - 2] && i[x][y - 2] === i[x][y - 3]) {
        console.log('VERTICAL WINNER');
      }

      // HORIZONTAL WIN CONDITION
      // WORKS AS INTENDED
      if (i[x][y] === i[x + 1][y] && i[x][y] === i[x + 2][y] && i[x][y] === i[x + 3][y] || i[x][y] === i[x - 1][y] && i[x][y] === i[x + 1][y] && i[x][y] === i[x + 2][y] || i[x][y] === i[x - 2][y] && i[x][y] === i[x - 1][y] && i[x][y] === i[x + 1][y] || i[x][y] === i[x - 3][y] && i[x][y] === i[x - 2][y] && i[x][y] === i[x - 1][y]) {
        console.log('HORIZONTAL WINNER');
      }

      // DIAGONAL WIN CONDITION

      // DIAGONAL BOTTOM-LEFT TO TOP-RIGHT
      // WORKS AS INTENDED
      if (i[x][y] === i[x + 1][y + 1] && i[x][y] === i[x + 2][y + 2] && i[x][y] === i[x + 3][y + 3] || i[x][y] === i[x - 1][y - 1] && i[x][y] === i[x + 1][y + 1] && i[x][y] === i[x + 2][y + 2] || i[x][y] === i[x - 2][y - 2] && i[x][y] === i[x - 1][y - 1] && i[x][y] === i[x + 1][y + 1] || i[x][y] === i[x - 3][y - 3] && i[x][y] === i[x - 2][y - 2] && i[x][y] === i[x - 1][y - 1]) {
        console.log('DIAGONAL WINNER BOTTOM-LEFT TO TOP-RIGHT');
      }
      // DIAGONAL TOP-LEFT TO BOTTOM-RIGHT
      if (i[x][y] === i[x + 3][y - 3] && i[x][y] === i[x + 2][y - 2] && i[x][y] === i[x + 1][y - 1] || i[x][y] === i[x + 2][y - 2] && i[x][y] === i[x + 1][y - 1] && i[x][y] === i[x - 1][y + 1] || i[x][y] === i[x + 1][y - 1] && i[x][y] === i[x - 1][y + 1] && i[x][y] === i[x - 2][y + 2] || i[x][y] === i[x - 1][y + 1] && i[x][y] === i[x - 2][y + 2] && i[x][y] === i[x - 3][y + 3]) {
        console.log('DIAGONAL WINNER TOP-LEFT TO BOTTOM-RIGHT');
      }
    }
  });
};

// CHECK WHOSE TURN AND UPDATE TURN ORDER
app.changeTurn = function () {
  var currentColor = app.nextTurn[app.nextTurn.length - 1];
  if (currentColor === 'red') {
    app.nextTurn.push('yellow');
    $('.turn-indicator').text('Yellow');
  } else if (currentColor === 'yellow') {
    app.nextTurn.push('red');
    $('.turn-indicator').text('Red');
  }
};

app.winCondition = function () {
  // const counter = Object.values(app.columns);
  // let i = cellNum - 1;
  // const j = $(this).data("array");
  // if (counter[j].length > 1 && counter[j][i] === counter[j][i - 1] && counter[j][i - 1] === counter[j][i - 2] && counter[j][i - 2] === counter[j][i - 3]) {
  //   alert('winner');
  // }
};

app.init = function () {
  app.addPiece();
};

// DOCUMENT READY
$(function () {
  app.init();
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
