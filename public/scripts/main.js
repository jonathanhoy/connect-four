(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

// ARRAYS

var columnA = [];
var columnB = [];
var columnC = [];
var columnD = [];
var columnE = [];
var columnF = [];
var columnG = [];
var columnList = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];
var turnOrder = ['red'];

$(function () {

  $('.column').on('click', function () {
    $('.column');
  });

  // CLICK ON COLUMN TO ADD PIECE
  // THIS CODE WORKS!!! ⬆️ TESTING DYNAMIC EVENT LISTENER ABOVE
  $('.column-a').on('click', function () {
    if (columnA.length >= 6) {
      alert('Invalid move!');
    } else if (columnA.length < 6) {
      var color = turnOrder[turnOrder.length - 1];
      var cellNum = columnA.length + 1;
      $('.column-a .cell' + cellNum).addClass('' + color);
      columnA.push('piece');
      console.log('A', columnA);
      checkTurn();
    }
  });

  $('.column-b').on('click', function () {
    if (columnB.length >= 6) {
      alert('Invalid move!');
    } else if (columnB.length < 6) {
      var color = turnOrder[turnOrder.length - 1];
      var cellNum = columnB.length + 1;
      $('.column-b .cell' + cellNum).addClass('' + color);
      columnB.push('piece');
      console.log('B', columnB);
      checkTurn();
    }
  });

  $('.column-c').on('click', function () {
    if (columnC.length >= 6) {
      alert('Invalid move!');
    } else if (columnC.length < 6) {
      var color = turnOrder[turnOrder.length - 1];
      var cellNum = columnC.length + 1;
      $('.column-c .cell' + cellNum).addClass('' + color);
      columnC.push('piece');
      console.log('C', columnC);
      checkTurn();
    }
  });

  $('.column-d').on('click', function () {
    if (columnD.length >= 6) {
      alert('Invalid move!');
    } else if (columnD.length < 6) {
      var color = turnOrder[turnOrder.length - 1];
      var cellNum = columnD.length + 1;
      $('.column-d .cell' + cellNum).addClass('' + color);
      columnD.push('piece');
      console.log('D', columnD);
      checkTurn();
    }
  });

  $('.column-e').on('click', function () {
    if (columnE.length >= 6) {
      alert('Invalid move!');
    } else if (columnE.length < 6) {
      var color = turnOrder[turnOrder.length - 1];
      var cellNum = columnE.length + 1;
      $('.column-e .cell' + cellNum).addClass('' + color);
      columnE.push('piece');
      console.log('E', columnE);
      checkTurn();
    }
  });

  $('.column-f').on('click', function () {
    if (columnF.length >= 6) {
      alert('Invalid move!');
    } else if (columnF.length < 6) {
      var color = turnOrder[turnOrder.length - 1];
      var cellNum = columnF.length + 1;
      $('.column-f .cell' + cellNum).addClass('' + color);
      columnF.push('piece');
      console.log('F', columnF);
      checkTurn();
    }
  });

  $('.column-g').on('click', function () {
    if (columnG.length >= 6) {
      alert('Invalid move!');
    } else if (columnG.length < 6) {
      var color = turnOrder[turnOrder.length - 1];
      var cellNum = columnG.length + 1;
      $('.column-g .cell' + cellNum).addClass('' + color);
      columnG.push('piece');
      console.log('G', columnG);
      checkTurn();
    }
  });

  // CHECK WHO'S TURN AND UPDATE TURN ORDER
  function checkTurn() {
    var currentColor = turnOrder[turnOrder.length - 1];
    if (currentColor === 'red') {
      turnOrder.push('yellow');
    } else if (currentColor === 'yellow') {
      turnOrder.push('red');
    }
  }

  // function addPiece() {
  //   $()
  // }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
