(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var app = {};

app.columns = {
  a: [],
  b: [],
  c: [],
  d: [],
  e: [],
  f: [],
  g: []
};
app.nextTurn = ['red'];

// CLICK ON COLUMN TO ADD PIECE
app.addPiece = function () {
  $('.column').on('click', function () {
    var index = $(this).data("column");
    var selectedColumn = app.columns['' + index];
    if (selectedColumn.length === 6) {
      alert('Invalid move!');
    } else if (selectedColumn.length < 6) {
      var color = app.nextTurn[app.nextTurn.length - 1];
      var cellNum = selectedColumn.length + 1;
      $('.column-' + index + ' .cell-' + cellNum).addClass('' + color);
      selectedColumn.push('' + color);
      app.changeTurn();

      // app.winCondition();


      var counter = Object.values(app.columns);
      var x = $(this).data("array");
      var y = cellNum - 1;

      // VERTICAL WIN CONDITION
      if (counter[x].length > 1 && counter[x][y] === counter[x][y - 1] && counter[x][y - 1] === counter[x][y - 2] && counter[x][y - 2] === counter[x][y - 3]) {
        alert('VERTICAL WINNER');
      }

      // HORIZONTAL WIN CONDITION
      if (counter[x][y] === counter[x + 1][y] && counter[x + 1][y] === counter[x + 2][y] && counter[x + 2][y] === counter[x + 3][y] || counter[x - 1][y] === counter[x][y] && counter[x][y] === counter[x + 1][y] && counter[x + 1][y] === counter[x + 2][y]) {
        console.log('hello');
      }
    }
  });
};

// CHECK WHOSE TURN AND UPDATE TURN ORDER
app.changeTurn = function () {
  var currentColor = app.nextTurn[app.nextTurn.length - 1];
  if (currentColor === 'red') {
    app.nextTurn.push('yellow');
    $('.turn-indicator').text('Yellow');
  } else if (currentColor === 'yellow') {
    app.nextTurn.push('red');
    $('.turn-indicator').text('Red');
  }
};

app.winCondition = function () {
  // const counter = Object.values(app.columns);
  // let i = cellNum - 1;
  // const j = $(this).data("array");
  // if (counter[j].length > 1 && counter[j][i] === counter[j][i - 1] && counter[j][i - 1] === counter[j][i - 2] && counter[j][i - 2] === counter[j][i - 3]) {
  //   alert('winner');
  // }
};

app.init = function () {
  app.addPiece();
};

// DOCUMENT READY
$(function () {
  app.init();
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJkZXYvc2NyaXB0cy9tYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQSxJQUFNLE1BQU0sRUFBWjs7QUFFQSxJQUFJLE9BQUosR0FBYztBQUNaLEtBQUcsRUFEUztBQUVaLEtBQUcsRUFGUztBQUdaLEtBQUcsRUFIUztBQUlaLEtBQUcsRUFKUztBQUtaLEtBQUcsRUFMUztBQU1aLEtBQUcsRUFOUztBQU9aLEtBQUc7QUFQUyxDQUFkO0FBU0EsSUFBSSxRQUFKLEdBQWUsQ0FBQyxLQUFELENBQWY7O0FBRUE7QUFDQSxJQUFJLFFBQUosR0FBZSxZQUFXO0FBQ3hCLElBQUUsU0FBRixFQUFhLEVBQWIsQ0FBZ0IsT0FBaEIsRUFBeUIsWUFBWTtBQUNuQyxRQUFNLFFBQVEsRUFBRSxJQUFGLEVBQVEsSUFBUixDQUFhLFFBQWIsQ0FBZDtBQUNBLFFBQU0saUJBQWlCLElBQUksT0FBSixNQUFlLEtBQWYsQ0FBdkI7QUFDQSxRQUFJLGVBQWUsTUFBZixLQUEwQixDQUE5QixFQUFpQztBQUMvQixZQUFNLGVBQU47QUFDRCxLQUZELE1BRU8sSUFBSSxlQUFlLE1BQWYsR0FBd0IsQ0FBNUIsRUFBK0I7QUFDcEMsVUFBTSxRQUFRLElBQUksUUFBSixDQUFhLElBQUksUUFBSixDQUFhLE1BQWIsR0FBc0IsQ0FBbkMsQ0FBZDtBQUNBLFVBQU0sVUFBVSxlQUFlLE1BQWYsR0FBd0IsQ0FBeEM7QUFDQSxxQkFBYSxLQUFiLGVBQTRCLE9BQTVCLEVBQXVDLFFBQXZDLE1BQW1ELEtBQW5EO0FBQ0EscUJBQWUsSUFBZixNQUF1QixLQUF2QjtBQUNBLFVBQUksVUFBSjs7QUFFQTs7O0FBSUEsVUFBTSxVQUFVLE9BQU8sTUFBUCxDQUFjLElBQUksT0FBbEIsQ0FBaEI7QUFDQSxVQUFNLElBQUksRUFBRSxJQUFGLEVBQVEsSUFBUixDQUFhLE9BQWIsQ0FBVjtBQUNBLFVBQU0sSUFBSSxVQUFVLENBQXBCOztBQUVBO0FBQ0EsVUFBSSxRQUFRLENBQVIsRUFBVyxNQUFYLEdBQW9CLENBQXBCLElBQXlCLFFBQVEsQ0FBUixFQUFXLENBQVgsTUFBa0IsUUFBUSxDQUFSLEVBQVcsSUFBSSxDQUFmLENBQTNDLElBQWdFLFFBQVEsQ0FBUixFQUFXLElBQUksQ0FBZixNQUFzQixRQUFRLENBQVIsRUFBVyxJQUFJLENBQWYsQ0FBdEYsSUFBMkcsUUFBUSxDQUFSLEVBQVcsSUFBSSxDQUFmLE1BQXNCLFFBQVEsQ0FBUixFQUFXLElBQUksQ0FBZixDQUFySSxFQUF3SjtBQUN0SixjQUFNLGlCQUFOO0FBQ0Q7O0FBRUQ7QUFDQSxVQUFLLFFBQVEsQ0FBUixFQUFXLENBQVgsTUFBa0IsUUFBUSxJQUFJLENBQVosRUFBZSxDQUFmLENBQWxCLElBQXVDLFFBQVEsSUFBSSxDQUFaLEVBQWUsQ0FBZixNQUFzQixRQUFRLElBQUksQ0FBWixFQUFlLENBQWYsQ0FBN0QsSUFBa0YsUUFBUSxJQUFJLENBQVosRUFBZSxDQUFmLE1BQXNCLFFBQVEsSUFBSSxDQUFaLEVBQWUsQ0FBZixDQUF6RyxJQUFnSSxRQUFRLElBQUUsQ0FBVixFQUFhLENBQWIsTUFBb0IsUUFBUSxDQUFSLEVBQVcsQ0FBWCxDQUFwQixJQUFxQyxRQUFRLENBQVIsRUFBVyxDQUFYLE1BQWtCLFFBQVEsSUFBSSxDQUFaLEVBQWUsQ0FBZixDQUF2RCxJQUE0RSxRQUFRLElBQUksQ0FBWixFQUFlLENBQWYsTUFBc0IsUUFBUSxJQUFJLENBQVosRUFBZSxDQUFmLENBQXRPLEVBQTBQO0FBQ3hQLGdCQUFRLEdBQVIsQ0FBWSxPQUFaO0FBQ0Q7QUFFRjtBQUNGLEdBL0JEO0FBZ0NELENBakNEOztBQW1DQTtBQUNBLElBQUksVUFBSixHQUFpQixZQUFXO0FBQzFCLE1BQU0sZUFBZSxJQUFJLFFBQUosQ0FBYSxJQUFJLFFBQUosQ0FBYSxNQUFiLEdBQXNCLENBQW5DLENBQXJCO0FBQ0EsTUFBSSxpQkFBaUIsS0FBckIsRUFBNEI7QUFDMUIsUUFBSSxRQUFKLENBQWEsSUFBYixDQUFrQixRQUFsQjtBQUNBLE1BQUUsaUJBQUYsRUFBcUIsSUFBckI7QUFDRCxHQUhELE1BR08sSUFBSSxpQkFBaUIsUUFBckIsRUFBK0I7QUFDcEMsUUFBSSxRQUFKLENBQWEsSUFBYixDQUFrQixLQUFsQjtBQUNBLE1BQUUsaUJBQUYsRUFBcUIsSUFBckI7QUFDRDtBQUNGLENBVEQ7O0FBV0EsSUFBSSxZQUFKLEdBQW1CLFlBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0QsQ0FQRDs7QUFTQSxJQUFJLElBQUosR0FBVyxZQUFXO0FBQ3BCLE1BQUksUUFBSjtBQUNELENBRkQ7O0FBSUE7QUFDQSxFQUFFLFlBQVc7QUFDWCxNQUFJLElBQUo7QUFDRCxDQUZEIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiY29uc3QgYXBwID0ge307XG5cbmFwcC5jb2x1bW5zID0ge1xuICBhOiBbXSxcbiAgYjogW10sXG4gIGM6IFtdLFxuICBkOiBbXSxcbiAgZTogW10sXG4gIGY6IFtdLFxuICBnOiBbXVxufVxuYXBwLm5leHRUdXJuID0gWydyZWQnXTtcblxuLy8gQ0xJQ0sgT04gQ09MVU1OIFRPIEFERCBQSUVDRVxuYXBwLmFkZFBpZWNlID0gZnVuY3Rpb24oKSB7XG4gICQoJy5jb2x1bW4nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgaW5kZXggPSAkKHRoaXMpLmRhdGEoXCJjb2x1bW5cIik7XG4gICAgY29uc3Qgc2VsZWN0ZWRDb2x1bW4gPSBhcHAuY29sdW1uc1tgJHtpbmRleH1gXTtcbiAgICBpZiAoc2VsZWN0ZWRDb2x1bW4ubGVuZ3RoID09PSA2KSB7XG4gICAgICBhbGVydCgnSW52YWxpZCBtb3ZlIScpO1xuICAgIH0gZWxzZSBpZiAoc2VsZWN0ZWRDb2x1bW4ubGVuZ3RoIDwgNikge1xuICAgICAgY29uc3QgY29sb3IgPSBhcHAubmV4dFR1cm5bYXBwLm5leHRUdXJuLmxlbmd0aCAtIDFdO1xuICAgICAgY29uc3QgY2VsbE51bSA9IHNlbGVjdGVkQ29sdW1uLmxlbmd0aCArIDE7XG4gICAgICAkKGAuY29sdW1uLSR7aW5kZXh9IC5jZWxsLSR7Y2VsbE51bX1gKS5hZGRDbGFzcyhgJHtjb2xvcn1gKTtcbiAgICAgIHNlbGVjdGVkQ29sdW1uLnB1c2goYCR7Y29sb3J9YCk7XG4gICAgICBhcHAuY2hhbmdlVHVybigpO1xuXG4gICAgICAvLyBhcHAud2luQ29uZGl0aW9uKCk7XG5cblxuXG4gICAgICBjb25zdCBjb3VudGVyID0gT2JqZWN0LnZhbHVlcyhhcHAuY29sdW1ucyk7XG4gICAgICBjb25zdCB4ID0gJCh0aGlzKS5kYXRhKFwiYXJyYXlcIik7XG4gICAgICBjb25zdCB5ID0gY2VsbE51bSAtIDE7XG5cbiAgICAgIC8vIFZFUlRJQ0FMIFdJTiBDT05ESVRJT05cbiAgICAgIGlmIChjb3VudGVyW3hdLmxlbmd0aCA+IDEgJiYgY291bnRlclt4XVt5XSA9PT0gY291bnRlclt4XVt5IC0gMV0gJiYgY291bnRlclt4XVt5IC0gMV0gPT09IGNvdW50ZXJbeF1beSAtIDJdICYmIGNvdW50ZXJbeF1beSAtIDJdID09PSBjb3VudGVyW3hdW3kgLSAzXSkge1xuICAgICAgICBhbGVydCgnVkVSVElDQUwgV0lOTkVSJyk7XG4gICAgICB9XG5cbiAgICAgIC8vIEhPUklaT05UQUwgV0lOIENPTkRJVElPTlxuICAgICAgaWYgKChjb3VudGVyW3hdW3ldID09PSBjb3VudGVyW3ggKyAxXVt5XSAmJiBjb3VudGVyW3ggKyAxXVt5XSA9PT0gY291bnRlclt4ICsgMl1beV0gJiYgY291bnRlclt4ICsgMl1beV0gPT09IGNvdW50ZXJbeCArIDNdW3ldKSB8fCAoY291bnRlclt4LTFdW3ldID09PSBjb3VudGVyW3hdW3ldICYmIGNvdW50ZXJbeF1beV0gPT09IGNvdW50ZXJbeCArIDFdW3ldICYmIGNvdW50ZXJbeCArIDFdW3ldID09PSBjb3VudGVyW3ggKyAyXVt5XSkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2hlbGxvJyk7XG4gICAgICB9XG5cbiAgICB9XG4gIH0pO1xufVxuXG4vLyBDSEVDSyBXSE9TRSBUVVJOIEFORCBVUERBVEUgVFVSTiBPUkRFUlxuYXBwLmNoYW5nZVR1cm4gPSBmdW5jdGlvbigpIHtcbiAgY29uc3QgY3VycmVudENvbG9yID0gYXBwLm5leHRUdXJuW2FwcC5uZXh0VHVybi5sZW5ndGggLSAxXTtcbiAgaWYgKGN1cnJlbnRDb2xvciA9PT0gJ3JlZCcpIHtcbiAgICBhcHAubmV4dFR1cm4ucHVzaCgneWVsbG93Jyk7XG4gICAgJCgnLnR1cm4taW5kaWNhdG9yJykudGV4dChgWWVsbG93YCk7XG4gIH0gZWxzZSBpZiAoY3VycmVudENvbG9yID09PSAneWVsbG93Jykge1xuICAgIGFwcC5uZXh0VHVybi5wdXNoKCdyZWQnKTtcbiAgICAkKCcudHVybi1pbmRpY2F0b3InKS50ZXh0KGBSZWRgKTtcbiAgfVxufTtcblxuYXBwLndpbkNvbmRpdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAvLyBjb25zdCBjb3VudGVyID0gT2JqZWN0LnZhbHVlcyhhcHAuY29sdW1ucyk7XG4gIC8vIGxldCBpID0gY2VsbE51bSAtIDE7XG4gIC8vIGNvbnN0IGogPSAkKHRoaXMpLmRhdGEoXCJhcnJheVwiKTtcbiAgLy8gaWYgKGNvdW50ZXJbal0ubGVuZ3RoID4gMSAmJiBjb3VudGVyW2pdW2ldID09PSBjb3VudGVyW2pdW2kgLSAxXSAmJiBjb3VudGVyW2pdW2kgLSAxXSA9PT0gY291bnRlcltqXVtpIC0gMl0gJiYgY291bnRlcltqXVtpIC0gMl0gPT09IGNvdW50ZXJbal1baSAtIDNdKSB7XG4gIC8vICAgYWxlcnQoJ3dpbm5lcicpO1xuICAvLyB9XG59XG5cbmFwcC5pbml0ID0gZnVuY3Rpb24oKSB7XG4gIGFwcC5hZGRQaWVjZSgpO1xufVxuXG4vLyBET0NVTUVOVCBSRUFEWVxuJChmdW5jdGlvbigpIHtcbiAgYXBwLmluaXQoKTtcbn0pIl19
